{"version":3,"sources":["zodiacs/Virgo.jpg","zodiacs/Aquarius.jpg","zodiacs/Aries.jpg","zodiacs/Cancer.jpg","zodiacs/Capricorn.jpg","zodiacs/Gemini.jpg","zodiacs/Leo.jpg","zodiacs/Pisces.jpg","zodiacs/Sagittarius.jpg","zodiacs/Scorpio.jpg","zodiacs/Taurus.jpg","zodiacs/Libra.jpg","Form.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","RegistrationForm","props","state","date","day","month","year","zodiac","dateSubmit","bind","dateChange","event","preventDefault","lifeYear","lifeMonth","lifeDay","birthYear","this","birthMonth","birthDay","currentYear","Date","getFullYear","currentMonth","getMonth","currentDate","getDate","setState","Capricorn","Aquarius","Pisces","Aries","Taurus","Gemini","Cancer","Leo","Virgo","Libra","Scorpio","Sagittarius","target","placeholder","value","onSubmit","type","onChange","src","Component","App","Form","Boolean","window","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.50d6a0d6.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/Virgo.218e7cd7.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Aquarius.a06d85a8.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Aries.b0b57d8b.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Cancer.59366ec6.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Capricorn.237c9023.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Gemini.a015f94a.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Leo.e8c7a86f.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Pisces.ea6e25d1.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Sagittarius.1af53199.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Scorpio.f3391dac.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Taurus.cfda2264.jpg\";","module.exports = __webpack_public_path__ + \"static/media/Libra.614366f1.jpg\";","import React, { Component } from 'react';\r\nimport Virgo from './zodiacs/Virgo.jpg'\r\nimport Aquarius from './zodiacs/Aquarius.jpg'\r\nimport Aries from './zodiacs/Aries.jpg'\r\nimport Cancer from './zodiacs/Cancer.jpg'\r\nimport Capricorn from './zodiacs/Capricorn.jpg'\r\nimport Gemini from './zodiacs/Gemini.jpg'\r\nimport Leo from './zodiacs/Leo.jpg'\r\nimport Pisces from './zodiacs/Pisces.jpg'\r\nimport Sagittarius from './zodiacs/Sagittarius.jpg'\r\nimport Scorpio from './zodiacs/Scorpio.jpg'\r\nimport Taurus from './zodiacs/Taurus.jpg'\r\nimport Libra from './zodiacs/Libra.jpg'\r\nclass RegistrationForm extends Component {\r\n\tconstructor(props) {\r\n\t  super(props);\r\n\t  this.state = {\r\n\t\tdate: '',\r\n\t\tday: '',\r\n\t\tmonth: '',\r\n\t\tyear: '',\r\n\t\tzodiac:''\r\n\t  };\r\n\t  this.dateSubmit=this.dateSubmit.bind(this);\r\n\t  this.dateChange=this.dateChange.bind(this);\r\n\t}\r\n\tdateSubmit(event){\r\n\t\tevent.preventDefault();\r\n\t\tvar birthYear=this.state.year;\r\n\t\tvar birthMonth=this.state.month;\r\n\t\tvar birthDay=this.state.day;\r\n\t\tvar birthDate=new Date(birthYear,birthMonth-1,birthDay);\r\n\t\tvar currentYear=new Date().getFullYear();\r\n\t\tvar currentMonth=new Date().getMonth()+1;\r\n\t\tvar currentDate=new Date().getDate();\r\n\t\tvar lifeYear;\r\n\t\tvar lifeMonth;\r\n\t\tvar lifeDay;\r\n\r\n\t\tswitch (birthMonth) {\r\n\t\t\tcase '1':\r\n\t\t\t\tif (birthDay <= 19)\r\n\t\t\t\t\tthis.setState({zodiac:Capricorn});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Aquarius});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '2':\r\n\t\t\t\tif (birthDay <= 18)\r\n\t\t\t\t\tthis.setState({zodiac:Aquarius});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Pisces});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '3':\r\n\t\t\t\tif (birthDay <= 20)\r\n\t\t\t\t\tthis.setState({zodiac:Pisces});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Aries});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '4':\r\n\t\t\t\tif (birthDay <= 19)\r\n\t\t\t\t\tthis.setState({zodiac:Aries});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Taurus});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '5':\r\n\t\t\t\tif (birthDay <= 20)\r\n\t\t\t\t\tthis.setState({zodiac:Taurus});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Gemini});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '6':\r\n\t\t\t\tif (birthDay <= 21)\r\n\t\t\t\t\tthis.setState({zodiac:Gemini});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Cancer});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '7':\r\n\t\t\t\tif (birthDay <= 22)\r\n\t\t\t\t\tthis.setState({zodiac:Cancer});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Leo});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '8':\r\n\t\t\t\tif (birthDay <= 22)\r\n\t\t\t\t\tthis.setState({zodiac:Leo});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Virgo});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '9':\r\n\t\t\t\tif (birthDay <= 22)\r\n\t\t\t\t\tthis.setState({zodiac:Virgo});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Libra});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '10':\r\n\t\t\t\tif (birthDay <= 22)\r\n\t\t\t\t\tthis.setState({zodiac:Libra});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Scorpio});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '11':\r\n\t\t\t\tif (birthDay <= 22)\r\n\t\t\t\t\tthis.setState({zodiac:Scorpio});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Sagittarius});\r\n\t\t\t\tbreak;\r\n\t\t\tcase '12':\r\n\t\t\t\tif (birthDay <= 21)\r\n\t\t\t\t\tthis.setState({zodiac:Sagittarius});\r\n\t\t\t\telse\r\n\t\t\t\t\tthis.setState({zodiac:Capricorn});\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\tif(currentMonth<birthMonth || currentMonth==birthMonth && currentDate<birthDay )\r\n\t\t{\r\n\t\t\tlifeYear=currentYear-birthYear-1;\r\n\t\t\tlifeMonth=12-birthMonth+currentMonth;\r\n\t\t}\r\n\t\telse if(currentMonth>birthMonth || currentMonth==birthMonth && currentDate>=birthDay)\r\n\t\t{\r\n\t\t\tlifeYear=currentYear-birthYear;\r\n\t\t\tlifeMonth=currentMonth-birthMonth;\r\n\t\t}\r\n\t\tif(currentDate>=birthDay)\r\n\t\t{\r\n\t\t\tlifeDay=currentDate-birthDay;\r\n\t\t}\r\n\t\telse\r\n\t\t{\r\n\t\t\tlifeMonth--;\r\n\t\t\tif(lifeMonth<0)\r\n\t\t\t{\r\n\t\t\t\tlifeMonth=11;\r\n\t\t\t\tlifeYear--;\r\n\t\t\t}\r\n\t\t\tif(birthMonth==1 || birthMonth==3 ||birthMonth==5 ||birthMonth==7 ||birthMonth==8 ||birthMonth==10 ||birthMonth==12)\r\n\t\t\t{\r\n\t\t\t\tlifeDay=currentDate+31-birthDay;\r\n\t\t\t}\r\n\t\t\telse if(birthMonth==4 || birthMonth==6 ||birthMonth==9 ||birthMonth==11)\r\n\t\t\t{\r\n\t\t\t\tlifeDay=currentDate+30-birthDay;\r\n\t\t\t}\r\n\t\t\telse if(birthMonth==2 && ((birthYear%4==0 && birthYear%100!=0)||(birthYear%400)))\r\n\t\t\t{\r\n\t\t\t\tlifeDay=currentDate+29-birthDay;\r\n\t\t\t}\r\n\t\t\telse\r\n\t\t\t{\r\n\t\t\t\tlifeDay=currentDate+28-birthDay;\r\n\t\t\t}\r\n\t\t}\r\n\t\t\r\n\t\tthis.setState({date:'Тебе '+lifeYear+' лет '+lifeMonth+' месяцев и '+lifeDay+' дней. Твой знак зодиака:'})\r\n\r\n\t}\r\n\tdateChange(event){\r\n\t\t\r\n\t\tswitch(event.target.placeholder){\r\n\t\t\tcase 'day':\r\n\t\t\t\tthis.setState({day:event.target.value})\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'month':\r\n\t\t\t\tthis.setState({month:event.target.value})\r\n\t\t\t\tbreak;\r\n\t\t\tcase 'year':\r\n\t\t\t\tthis.setState({year:event.target.value})\r\n\t\t\t\tbreak;\r\n\t\t\tdefault:\r\n\t\t\t\tbreak;\r\n\t\t}\r\n\r\n\t\t\r\n\t}\r\n  render() {\r\n\t  \r\n    return (\r\n      <form onSubmit={this.dateSubmit}>\r\n\t\t<input type=\"text\" placeholder=\"day\" value={this.state.day} onChange={this.dateChange}/><br/>\r\n\t\t<input type=\"text\" placeholder=\"month\" value={this.state.month} onChange={this.dateChange}/><br/>\r\n\t\t<input type=\"text\" placeholder=\"year\" value={this.state.year} onChange={this.dateChange}/><br/>\r\n\t\t<button>save</button>\r\n\t\t<div>{this.state.date}</div><br/>\r\n\t\t<img src={this.state.zodiac}/>\r\n\t  </form>\r\n\t  \r\n    );\r\n  }\r\n}\r\n\r\nexport default RegistrationForm;","import React, { Component } from 'react';\nimport Form from './Form';\nclass App extends Component{\n\trender(){\n\t\treturn (\n\t\t\t<div>\n\t\t\t\t<Form />\n\t\t\t</div>\n\t\t)\n\t}\n}\nexport default App;","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}